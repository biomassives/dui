<% if Dui.uploader_server_host.present? %>

<hr>
<h2>External uploader</h2>

<h3>Empty file</h3>

<%= render_uploader status_data_type: 'jsonp', uploader_params: { bucket: 'cloud-uploader' }, input: hidden_field_tag(:filename) %>

<% if existing_file = Dir[Rails.root.join('public/system/uploads/**/*')].first %>

<h3>Existing file</h3>

<%= render_uploader status_data_type: 'jsonp', uploader_params: { bucket: 'cloud-uploader' }, input: hidden_field_tag(:filename), file: { filename: File.basename(existing_file), url: "#{root_url}system/uploads/#{File.basename(existing_file)}", size: File.size(existing_file) } %>

<% end %>

<% end %>

<hr>

<h2>Local uploader</h2>

<h3>Empty file</h3>

<%= render_uploader url: dui.uploader_url, status_url: dui.uploader_status_url, pusher_api_key: '', uploader_params: { bucket: 'cloud-uploader' }, input: hidden_field_tag(:filename) %>

<% if existing_file = Dir[Rails.root.join('public/system/uploads/**/*')].first %>
<h3>Existing file</h3>

<%= render_uploader url: dui.uploader_url, status_url: dui.uploader_status_url, pusher_api_key: '', uploader_params: { bucket: 'cloud-uploader' }, input: hidden_field_tag(:filename), file: { filename: File.basename(existing_file), url: "#{root_url}system/uploads/#{File.basename(existing_file)}", size: File.size(existing_file) } %>

<% end %>
